webpackJsonp([0],{11:function(a,b,c){"use strict";function d(a){return function(){var b=a.apply(this,arguments);return new Promise(function(a,c){function d(e,f){try{var g=b[e](f),h=g.value}catch(a){return void c(a)}return g.done?void a(h):Promise.resolve(h).then(function(a){d("next",a)},function(a){d("throw",a)})}return d("next")})}}Object.defineProperty(b,"__esModule",{value:!0}),c.d(b,"TradingService",function(){return h});var e=c(4),f=c(1),g=c(0);let h=class{constructor(){this._http=new e.a}getCurrentWeekTradings(){return this._http.get(`${"http://localhost:3000"}/trading/currentWeek`).then((a)=>{const b=a.map((a)=>new g.a(new Date(a.date),a.amount,a.value));return b},()=>{throw new f.a("Could not get tradings from the current week")})}getPreviousWeekTradings(){return this._http.get(`${"http://localhost:3000"}/trading/previousWeek`).then((a)=>a.map((a)=>new g.a(new Date(a.date),a.amount,a.value)),()=>{throw new f.a("Could not get tradings from the previous week")})}getDelayedWeekTradings(){return this._http.get(`${"http://localhost:3000"}/trading/delayedWeek`).then((a)=>a.map((a)=>new g.a(new Date(a.date),a.amount,a.value)),()=>{throw new f.a("Could not get tradings from the delayed week")})}getAllTradings(){var a=this;return d(function*(){try{let b=yield Promise.all([a.getCurrentWeekTradings(),a.getPreviousWeekTradings(),a.getDelayedWeekTradings()]);return b.reduce(function(a,b){return a.concat(b)},[]).sort(function(c,a){return a.date.getTime()-c.date.getTime()})}catch(a){throw new f.a("Could not get tradings")}})()}}}});
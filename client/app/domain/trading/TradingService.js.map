{"version":3,"sources":["../../../app-src/domain/trading/TradingService.js"],"names":["HttpService","ApplicationException","Trading","TradingService","constructor","_http","getCurrentWeekTradings","get","then","data","tradings","map","object","Date","date","amount","value","err","getPreviousWeekTradings","getDelayedWeekTradings","getAllTradings","tradingsFromPeriod","Promise","all","reduce","newArray","item","concat","sort","a","b","getTime"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,2BAA5B;AACA,SAASC,oBAAT,QAAqC,oCAArC;AACA,SAASC,OAAT,QAAwB,cAAxB;;AAEA,WAAaC,cAAb,GAAO,MAAMA,cAAN,CAAqB;AAC1BC,gBAAc;AACZ,SAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACD;;AAEDM,2BAAyB;AACvB,WAAO,KAAKD,KAAL,CACJE,GADI,CACA,2CADA,EAEJC,IAFI,CAGHC,QAAQ;AACN,YAAMC,WAAWD,KAAKE,GAAL,CAASC,UACxB,IAAIV,OAAJ,CAAY,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAZ,EAAmCF,OAAOG,MAA1C,EAAkDH,OAAOI,KAAzD,CADe,CAAjB;;AAGA,aAAON,QAAP;AACD,KARE,EASHO,OAAO;AACL,YAAM,IAAIhB,oBAAJ,CAAyB,8CAAzB,CAAN;AACD,KAXE,CAAP;AAaD;;AAEDiB,4BAA0B;AACxB,WAAO,KAAKb,KAAL,CACJE,GADI,CACA,2CADA,EAEJC,IAFI,CAGHC,QACEA,KAAKE,GAAL,CAASC,UACP,IAAIV,OAAJ,CAAY,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAZ,EAAmCF,OAAOG,MAA1C,EAAkDH,OAAOI,KAAzD,CADF,CAJC,EAOHC,OAAO;AACL,YAAM,IAAIhB,oBAAJ,CAAyB,+CAAzB,CAAN;AACD,KATE,CAAP;AAWD;;AAEDkB,2BAAyB;AACvB,WAAO,KAAKd,KAAL,CACJE,GADI,CACA,0CADA,EAEJC,IAFI,CAGHC,QACEA,KAAKE,GAAL,CAASC,UACP,IAAIV,OAAJ,CAAY,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAZ,EAAmCF,OAAOG,MAA1C,EAAkDH,OAAOI,KAAzD,CADF,CAJC,EAOHC,OAAO;AACL,YAAM,IAAIhB,oBAAJ,CAAyB,8CAAzB,CAAN;AACD,KATE,CAAP;AAWD;;AAEKmB,gBAAN,GAAuB;AAAA;;AAAA;AACrB,UAAI;AACF,YAAIC,qBAAqB,MAAMC,QAAQC,GAAR,CAAY,CACzC,MAAKjB,sBAAL,EADyC,EAEzC,MAAKY,uBAAL,EAFyC,EAGzC,MAAKC,sBAAL,EAHyC,CAAZ,CAA/B;;AAMA,eAAOE,mBACJG,MADI,CACG,UAACC,QAAD,EAAWC,IAAX;AAAA,iBAAoBD,SAASE,MAAT,CAAgBD,IAAhB,CAApB;AAAA,SADH,EAC8C,EAD9C,EAEJE,IAFI,CAEC,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUA,EAAEhB,IAAF,CAAOiB,OAAP,KAAmBF,EAAEf,IAAF,CAAOiB,OAAP,EAA7B;AAAA,SAFD,CAAP;AAGD,OAVD,CAUE,OAAOd,GAAP,EAAY;AACZ,cAAM,IAAIhB,oBAAJ,CAAyB,wBAAzB,CAAN;AACD;AAboB;AActB;;AA/DyB,CAA5B","file":"TradingService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\nimport { ApplicationException } from '../../util/ApplicationException.js';\nimport { Trading } from './Trading.js';\n\nexport class TradingService {\n  constructor() {\n    this._http = new HttpService();\n  }\n\n  getCurrentWeekTradings() {\n    return this._http\n      .get('http://localhost:3000/trading/currentWeek')\n      .then(\n        data => {\n          const tradings = data.map(object =>\n            new Trading(new Date(object.date), object.amount, object.value));\n\n          return tradings;\n        },\n        err => {\n          throw new ApplicationException('Could not get tradings from the current week');\n        }\n      );\n  }\n\n  getPreviousWeekTradings() {\n    return this._http\n      .get('http://localhost:3000trading/previousWeek')\n      .then(\n        data =>\n          data.map(object =>\n            new Trading(new Date(object.date), object.amount, object.value))\n        ,\n        err => {\n          throw new ApplicationException('Could not get tradings from the previous week');\n        }\n      );\n  }\n\n  getDelayedWeekTradings() {\n    return this._http\n      .get('http://localhost:3000trading/delayedWeek')\n      .then(\n        data => \n          data.map(object => \n            new Trading(new Date(object.date), object.amount, object.value))\n        ,\n        err => {\n          throw new ApplicationException('Could not get tradings from the delayed week');\n        }\n      );\n  }\n\n  async getAllTradings() {\n    try {\n      let tradingsFromPeriod = await Promise.all([\n        this.getCurrentWeekTradings(),\n        this.getPreviousWeekTradings(),\n        this.getDelayedWeekTradings(),\n      ]);\n\n      return tradingsFromPeriod\n        .reduce((newArray, item) => newArray.concat(item), [])\n        .sort((a, b) => b.date.getTime() - a.date.getTime());\n    } catch (err) {\n      throw new ApplicationException('Could not get tradings');\n    }\n  }\n\n}\n"]}
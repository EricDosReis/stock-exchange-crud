{"version":3,"sources":["../../../app-src/domain/trading/TradingService.js"],"names":["HttpService","ApplicationException","Trading","TradingService","constructor","_http","getCurrentWeekTradings","get","then","data","tradings","map","object","Date","date","amount","value","err","getPreviousWeekTradings","getDelayedWeekTradings","getAllTradings","tradingsFromPeriod","Promise","all","reduce","newArray","item","concat","sort","a","b","getTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,iB,sBAAAA,W;;AACAC,0B,+BAAAA,oB;;AACAC,a,cAAAA,O;;;AAEF,YAAMC,cAAN,CAAqB;AAC1BC,sBAAc;AACZ,eAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACD;;AAEDM,iCAAyB;AACvB,iBAAO,KAAKD,KAAL,CACJE,GADI,CACA,qBADA,EAEJC,IAFI,CAGHC,QAAQ;AACN,kBAAMC,WAAWD,KAAKE,GAAL,CAASC,UACxB,IAAIV,OAAJ,CAAY,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAZ,EAAmCF,OAAOG,MAA1C,EAAkDH,OAAOI,KAAzD,CADe,CAAjB;;AAGA,mBAAON,QAAP;AACD,WARE,EASHO,OAAO;AACL,kBAAM,IAAIhB,oBAAJ,CAAyB,8CAAzB,CAAN;AACD,WAXE,CAAP;AAaD;;AAEDiB,kCAA0B;AACxB,iBAAO,KAAKb,KAAL,CACJE,GADI,CACA,sBADA,EAEJC,IAFI,CAGHC,QACEA,KAAKE,GAAL,CAASC,UACP,IAAIV,OAAJ,CAAY,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAZ,EAAmCF,OAAOG,MAA1C,EAAkDH,OAAOI,KAAzD,CADF,CAJC,EAOHC,OAAO;AACL,kBAAM,IAAIhB,oBAAJ,CAAyB,+CAAzB,CAAN;AACD,WATE,CAAP;AAWD;;AAEDkB,iCAAyB;AACvB,iBAAO,KAAKd,KAAL,CACJE,GADI,CACA,qBADA,EAEJC,IAFI,CAGHC,QACEA,KAAKE,GAAL,CAASC,UACP,IAAIV,OAAJ,CAAY,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAZ,EAAmCF,OAAOG,MAA1C,EAAkDH,OAAOI,KAAzD,CADF,CAJC,EAOHC,OAAO;AACL,kBAAM,IAAIhB,oBAAJ,CAAyB,8CAAzB,CAAN;AACD,WATE,CAAP;AAWD;;AAEKmB,sBAAN,GAAuB;AAAA;;AAAA;AACrB,gBAAI;AACF,kBAAIC,qBAAqB,MAAMC,QAAQC,GAAR,CAAY,CACzC,MAAKjB,sBAAL,EADyC,EAEzC,MAAKY,uBAAL,EAFyC,EAGzC,MAAKC,sBAAL,EAHyC,CAAZ,CAA/B;;AAMA,qBAAOE,mBACJG,MADI,CACG,UAACC,QAAD,EAAWC,IAAX;AAAA,uBAAoBD,SAASE,MAAT,CAAgBD,IAAhB,CAApB;AAAA,eADH,EAC8C,EAD9C,EAEJE,IAFI,CAEC,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBAAUA,EAAEhB,IAAF,CAAOiB,OAAP,KAAmBF,EAAEf,IAAF,CAAOiB,OAAP,EAA7B;AAAA,eAFD,CAAP;AAGD,aAVD,CAUE,OAAOd,GAAP,EAAY;AACZ,oBAAM,IAAIhB,oBAAJ,CAAyB,wBAAzB,CAAN;AACD;AAboB;AActB;;AA/DyB","file":"TradingService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\nimport { ApplicationException } from '../../util/ApplicationException.js';\nimport { Trading } from './Trading.js';\n\nexport class TradingService {\n  constructor() {\n    this._http = new HttpService();\n  }\n\n  getCurrentWeekTradings() {\n    return this._http\n      .get('trading/currentWeek')\n      .then(\n        data => {\n          const tradings = data.map(object =>\n            new Trading(new Date(object.date), object.amount, object.value));\n\n          return tradings;\n        },\n        err => {\n          throw new ApplicationException('Could not get tradings from the current week');\n        }\n      );\n  }\n\n  getPreviousWeekTradings() {\n    return this._http\n      .get('trading/previousWeek')\n      .then(\n        data =>\n          data.map(object =>\n            new Trading(new Date(object.date), object.amount, object.value))\n        ,\n        err => {\n          throw new ApplicationException('Could not get tradings from the previous week');\n        }\n      );\n  }\n\n  getDelayedWeekTradings() {\n    return this._http\n      .get('trading/delayedWeek')\n      .then(\n        data => \n          data.map(object => \n            new Trading(new Date(object.date), object.amount, object.value))\n        ,\n        err => {\n          throw new ApplicationException('Could not get tradings from the delayed week');\n        }\n      );\n  }\n\n  async getAllTradings() {\n    try {\n      let tradingsFromPeriod = await Promise.all([\n        this.getCurrentWeekTradings(),\n        this.getPreviousWeekTradings(),\n        this.getDelayedWeekTradings(),\n      ]);\n\n      return tradingsFromPeriod\n        .reduce((newArray, item) => newArray.concat(item), [])\n        .sort((a, b) => b.date.getTime() - a.date.getTime());\n    } catch (err) {\n      throw new ApplicationException('Could not get tradings');\n    }\n  }\n\n}\n"]}
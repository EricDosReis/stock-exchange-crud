{"version":3,"sources":["../../app-src/controllers/TradingController.js"],"names":["Tradings","TradingService","Trading","TradingsView","MessageView","Message","DateConverter","getTradingDao","Bind","getExceptionMessage","debounce","controller","TradingController","constructor","_inputDate","_inputAmount","_inputValue","$","document","querySelector","bind","Object","assign","_tradings","_message","_service","_init","add","event","preventDefault","trading","_createTrading","dao","text","_clearForm","err","removeAll","clear","importTradings","tradings","getAllTradings","filter","toArray","some","existingTrading","newTrading","equals","forEach","listAll","toDate","value","parseInt","parseFloat","focus"],"mappings":"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","file":"TradingController.js","sourcesContent":["import { Tradings, TradingService, Trading } from '../domain/index.js';\nimport { TradingsView, MessageView, Message, DateConverter } from '../ui/index.js';\nimport { getTradingDao, Bind, getExceptionMessage, debounce, controller } from '../util/index.js';\n\n@controller('#date', '#amount', '#value')\nexport class TradingController {\n  constructor(_inputDate, _inputAmount, _inputValue) {\n    const $ = document.querySelector.bind(document);\n\n    Object.assign(this, { _inputDate, _inputAmount, _inputValue });\n\n    this._tradings = new Bind(\n      new Tradings(),\n      new TradingsView('#tradings'),\n      'add', \n      'clear',\n    );\n\n    this._message = new Bind(\n      new Message(),\n      new MessageView('#message'),\n      'text',\n    );\n\n    this._service = new TradingService();\n    this._init();\n  }\n\n  @debounce()\n  async add(event) {\n    try {\n      event.preventDefault();\n\n      const trading = this._createTrading();\n\n      const dao = await getTradingDao();\n      await dao.add(trading);\n\n      this._tradings.add(trading);\n      this._message.text = 'Trading added successfully';\n      this._clearForm();\n    } catch (err) {\n      this._message.text = getExceptionMessage(err);\n    }\n  }\n\n  async removeAll() {\n    try {\n      const dao = await getTradingDao();\n      await dao.removeAll();\n\n      this._tradings.clear();\n      this._message.text = 'Tradings removed successfully';\n    } catch (err) {\n      this._message.text = getExceptionMessage(err);\n    }\n  }\n\n  @debounce(1500)\n  async importTradings() {\n    try {\n      const tradings = await this._service.getAllTradings();\n\n      tradings\n        .filter(newTrading => {\n          return !this._tradings.toArray().some((existingTrading) => {\n            return newTrading.equals(existingTrading);\n          })\n        })\n        .forEach(trading => this._tradings.add(trading));\n    } catch (err) {\n      this._message.text = getExceptionMessage(err);\n    }\n  }\n\n  async _init() {\n    try {\n      const dao = await getTradingDao();\n      const tradings = await dao.listAll();\n\n      tradings.forEach(trading => this._tradings.add(trading));\n    } catch (err) {\n      this._message.text = getExceptionMessage(err);\n    }\n  }\n\n  _createTrading() {\n    return new Trading(\n      DateConverter.toDate(this._inputDate.value),\n      parseInt(this._inputAmount.value),\n      parseFloat(this._inputValue.value),\n    );\n  }\n\n  _clearForm() {\n    this._inputDate.value = '';\n    this._inputAmount.value = 1;\n    this._inputValue.value = 0.0;\n    this._inputDate.focus();\n  }\n}\n"]}